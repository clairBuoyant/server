[tool.poetry]
name = "server"
version = "0.1.3"
description = "clairBuoyant Server"
authors = ["Kyle J. Burda <47502769+kylejb@users.noreply.github.com>"]

[tool.poetry.dependencies]
alembic = "^1.17.0"
asyncpg = "^0.30.0"
fastapi = "^0.119.0"
GeoAlchemy2 = "^0.18.0"
greenlet = "^3.2.4"
gunicorn = "^23.0.0"
pybuoy = "^0.5.9"
pydantic = "^2.12.3"
pydantic-settings = "^2.11.0"
python = ">=3.11, <4.0"
python-dotenv = "^1.1.1"
requests = "^2.32.5"
Shapely = "^2.1.2"
SQLAlchemy = "^2.0.44"
uvicorn = "^0.38.0"

[tool.poetry.group.dev.dependencies]
coverage = { version = "7.11.0", extras = ["toml"]}
httpx = "^0.28.1"
mypy = "^1.18.2"
pre-commit = "^4.3.0"
pytest-asyncio = "^1.2.0"
pytest-cov = "^7.0.0"
pytest = "^8.4.2"
ruff = "^0.14.1"

[tool.poetry.scripts]
bootstrap="scripts.poetry_entrypoint:bootstrap"
check="scripts.poetry_entrypoint:check"
clean="scripts.poetry_entrypoint:clean"
coverage="scripts.poetry_entrypoint:coverage"
db-create="scripts.poetry_entrypoint:create"
db-docker="scripts.poetry_entrypoint:docker"
db-migrations_autogenerate="scripts.poetry_entrypoint:migrations_autogenerate"
db-migrations_run="scripts.poetry_entrypoint:migrations_run"
db-migrations_undo="scripts.poetry_entrypoint:migrations_undo"
db-seeds="scripts.poetry_entrypoint:seeds"
dotenv="scripts.poetry_entrypoint:dotenv"
init="scripts.poetry_entrypoint:init"
lint="scripts.poetry_entrypoint:lint"
setup="scripts.poetry_entrypoint:setup"
start="scripts.poetry_entrypoint:start"
test="scripts.poetry_entrypoint:test"
uninstall="scripts.poetry_entrypoint:uninstall"

[tool.ruff]
exclude = [
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  "htmlcov",
  "venv",
  ".venv",
]
line-length = 88
target-version = "py311"

[tool.coverage]
# https://github.com/nedbat/coveragepy
  [tool.coverage.run]

  source = ["server"]
  branch = true
  omit = ['']

  [tool.coverage.report]
  exclude_lines = [
    "# noqa",
    "# pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
  ]

[tool.mypy]
explicit_package_bases = true
namespace_packages = true

[tool.pytest.ini_options]
asyncio_mode = "strict"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
