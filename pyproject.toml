[tool.poetry]
name = "server"
version = "0.1.2"
description = "clairBuoyant Server"
authors = ["Kyle J. Burda <47502769+kylejb@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = ">=3.11, <4.0"
fastapi = "^0.95.2"
requests = "^2.31.0"
uvicorn = "^0.22.0"
pydantic = "^1.10.8"
GeoAlchemy2 = "^0.13.3"
alembic = "^1.11.1"
python-dotenv = "^1.0.0"
asyncpg = "^0.27.0"
SQLAlchemy = "^2.0.15"
greenlet = "^2.0.2"
Shapely = "^2.0.1"
pybuoy = "^0.5.1"
gunicorn = "^20.1.0"

[tool.poetry.dev-dependencies]
black="^23.3.0"
coverage = { version = "7.2.5", extras = ["toml"]}
httpx = "^0.24.1"
isort = { version = "^5.12.0", extras = ["pyproject"]}
pytest="^7.3.1"
pre-commit = "^3.3.2"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"

[tool.poetry.scripts]
bootstrap="scripts.poetry_entrypoint:bootstrap"
check="scripts.poetry_entrypoint:check"
clean="scripts.poetry_entrypoint:clean"
coverage="scripts.poetry_entrypoint:coverage"
db-create="scripts.poetry_entrypoint:create"
db-docker="scripts.poetry_entrypoint:docker"
db-migrations_autogenerate="scripts.poetry_entrypoint:migrations_autogenerate"
db-migrations_run="scripts.poetry_entrypoint:migrations_run"
db-migrations_undo="scripts.poetry_entrypoint:migrations_undo"
db-seeds="scripts.poetry_entrypoint:seeds"
dotenv="scripts.poetry_entrypoint:dotenv"
init="scripts.poetry_entrypoint:init"
lint="scripts.poetry_entrypoint:lint"
setup="scripts.poetry_entrypoint:setup"
start="scripts.poetry_entrypoint:start"
test="scripts.poetry_entrypoint:test"
uninstall="scripts.poetry_entrypoint:uninstall"

[tool.black]
# https://github.com/psf/black
line-length = 88
target_version = ['py310']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.coverage]
# https://github.com/nedbat/coveragepy
  [tool.coverage.run]

  source = ["server"]
  branch = true
  omit = ['']

  [tool.coverage.report]
  exclude_lines = [
    "# noqa",
    "# pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
  ]

[tool.isort]
profile="black"

[tool.mypy]
explicit_package_bases = true
namespace_packages = true

[tool.pytest.ini_options]
asyncio_mode = "strict"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
