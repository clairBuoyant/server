version: "3.8"
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${WEB_PORT:-8000}:80"
    depends_on:
      - backend
      # - web # TODO: uncomment when web component is ready
    env_file:
      - ./nginx/nginx.env

  redis:
    image: redis
    ports:
      - 6379:6379

  postgres:
    image: postgis/postgis
    restart: always
    environment:
      POSTGRES_USER: ${postgres_user:-postgres}
      POSTGRES_PASSWORD: ${postgres_password:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data:cached
    # env_file:
    # - .env

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    command: python server/main.py
    tty: true
    volumes:
      - ./server:/backend/server/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: "postgresql+asyncpg://${postgres_user:-postgres}:${postgres_password:-postgres}@postgres:5432/${postgres_user:-postgres}"
    depends_on:
      - "postgres"
    # env_file:
    #   - .env

    # web:
    #   build:
    #     context: web
    #     dockerfile: Dockerfile
    #     target: development
    #   stdin_open: true
    #   volumes:
    #     - ./web:/web:cached
    #     - ./web/node_modules:/web/node_modules:cached
    #   environment:
    #     - NODE_ENV=development

volumes:
  db-data:
